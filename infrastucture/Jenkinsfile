pipeline {
    agent {
        label "jenkins-slave-kubectl"
    }  
    environment {
        BRANCH = "${params.environment}"
        PROJECT_NAME = "${params.project_name}"
        DOCKER_COMIT = "${params.docker_commit[0..6]}" // Name that we use to refer the container image
    }
    stages {
            stage('PrintCommit') {
                steps {
                    echo '**********************************************************'
                    echo '********************* Commit ... *********************'
                    echo '**********************************************************'
                    print "${params.docker_commit[0..7]}"
                    print "${params.environment}"
                    echo '**********************************************************'
                }
            }
            stage('Replace Commit'){
                steps {
                        sh "sed -i s/GIT_COMMIT/${env.DOCKER_COMIT}/g ./infrastucture/*.yaml && cat ./infrastucture/*.yaml"
                }
            }
            stage('Replace Environment'){
                steps {
                        sh "sed -i s/ENVIRONMENT/${env.BRANCH}/g ./infrastucture/*.yaml && cat ./infrastucture/*.yaml"
                }
            }
            stage('Deploying to Kubernetes'){
                steps {
                        sh "cd ./infrastucture &&\
                        ls -lia &&\
                        kubectl apply -f 00-NS.yaml &&\
                        kubectl apply -f 03-DEPLOYMENT.yaml &&\
                         kubectl apply -f ."
                }
            }
        }
        post {
            always {
                echo "========pipeline executed ========"
            }
            success {
                echo "========pipeline executed successfully ========"
            }
            unstable {
                echo "========pipeline execution failed========"
            }
            failure {
                echo "========pipeline execution failed========"
            }
        }
}
